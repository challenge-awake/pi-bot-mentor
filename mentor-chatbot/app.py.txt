import chainlit as cl
from hugging_chat import HuggingChat
import os
from dotenv import load_dotenv

# Charge les variables du .env
load_dotenv()

EMAIL = os.getenv("HF_EMAIL")
PASSWORD = os.getenv("HF_PASSWORD")

if not EMAIL or not PASSWORD:
    raise ValueError("Les variables HF_EMAIL et HF_PASSWORD doivent √™tre d√©finies dans le fichier .env")

@cl.on_chat_start
async def start():
    try:
        # Connexion √† HuggingChat
        cl.user_session.set("huggingchat", HuggingChat(email=EMAIL, passwd=PASSWORD))
        await cl.Message(content="üöÄ Bonjour Pioneer ! Je suis le **Pi Bot Mentor**.\n\nPose-moi une question sur Git, React, Pi Network...").send()
    except Exception as e:
        await cl.Message(content=f"‚ùå Erreur de connexion : {str(e)}").send()

@cl.on_message
async def on_message(message: str):
    huggingchat = cl.user_session.get("huggingchat")
    if not huggingchat:
        await cl.Message(content="‚ö†Ô∏è Connexion perdue.").send()
        return

    response = ""
    try:
        for chunk in huggingchat.stream(message):
            response += chunk
            await cl.Message(author="Pi Bot Mentor", content=chunk).stream_token()
    except Exception as e:
        await cl.Message(content=f"‚ùå Erreur : {str(e)}").send()